_model: project-idea
---
_hidden: yes
---
title: CC Catalog API usage guide
---
problem:
The [CC Catalog API documentation](https://api.creativecommons.engineering/v1/) is currently entirely auto-generated. While it's good, basic, API documentation, we'd like to make it more user friendly and provide how-tos, examples, and a bit more narrative.
---
expected_outcome:
* Published API documentation should include auto-generated documentation as well as narrative elements.
* API documentation should use Vocabulary, CC's design system if feasible.
---
internship_tasks:  
* Work with CCâ€™s backend engineer to come up with a plan for the documentation.
* Build upon the auto-generated documentation and find a way to include narrative elements.
* Integrate with Vocabulary if feasible.
* Write documentation and create pull requests to get it merged.
* Work with the CC team to deploy the documentation publicly.
---
application_tips:
* Demonstrate your familiarity with the codebase and existing documentation.
* Explain how you'd like to refactor or expand the documentation in detail.
---
resources:
* [CC Catalog API documentation](https://api.creativecommons.engineering/v1/)
* [CC Catalog API code](https://github.com/creativecommons/cccatalog-api)
* [GoodRx API guide](https://www.goodrx.com/developer) (example API guide)
* [Divio's documentation best practices](https://documentation.divio.com/)
* [vocabulary GitHub repo](https://github.com/creativecommons/vocabulary)
* [vocabulary documentation](https://cc-vocabulary.netlify.app/)
* [Introducing Vocabulary blog post on CC blog](https://creativecommons.org/2019/12/13/cc-vocabulary-web-design-system/)
* [Posts about Vocabulary on the CC open source blog](https://opensource.creativecommons.org/blog/categories/cc-vocabulary/)
---
skills_recommended: Python, Writing
---
mentors: Alden Page, Kriti Godey
---
difficulty: Medium
---
filter_value: difficulty-medium skill-python skill-writing
