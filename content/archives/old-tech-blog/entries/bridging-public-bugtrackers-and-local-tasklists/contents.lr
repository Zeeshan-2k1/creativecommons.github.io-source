title: Orgmode and Roundup: Bridging public bugtrackers and local tasklists
---
categories:
tools
---
author: cwebber
---
body:

So maybe you're already familiar with the problem. You're collaborating with other people, and especially if you're in a free software environment (but maybe even some install at your work) you have some bugtracker, and that's where everyone collaborates. But on the other hand, you have a life, your own todo systems, your own notes, etc. Even for the tasks that are on the bugtracker, you might keep your own local copy of that task and notes on that task. Eventually things start to get out of sync. Chaos!

Wouldn't it be great if you could sync both worlds? Keep the notes that are relevant to being public on the public bugtracker, but keep private notes that would just clutter up the ticket/issue/bugreport private. Mesh the public task system with your private task system. Well, why not?

So this was the very problem I'd run into. I have my work bugtracker for here at CC, our [install of roundup](http://code.creativecommons.org/issues/), and then I have my own TODO setup, a collection of [Org-mode](http://orgmode.org) files.

There are a lot of things I like about org-mode. It's in emacs (though there's apparently a [lean vim port in the works](http://article.gmane.org/gmane.emacs.orgmode/33226)), it's plaintext (which means I can sync across all my machines with git... which I do!), tasks are nested trees / outlines (I really tend to break down tasks in very granular fashions as I go so I don't get lost), notes are integrated directly with tasks (I take a **lot** of notes), and it's as simple as you need it or as complex as you want to get (I started out very simple, now my usage of org-mode is fairly intricate). It also does a good job of spanning across multiple files while still retraining the ability to pull everything together with its agenda, which is useful since I like to keep things semi-organized.

And of course, the relevant file here is all my Creative Commons stuff, which I keep in a file called ccommons.org. There's a lot of private data in here, but I've uploaded a [minimalist version of my ccommons.org file](http://labs.creativecommons.org/~cwebber/misc/ccommons.org).

So! Syncing things. If you open the file in an emacs version with org-mode installed, you'll notice 4 sections. Two of these are crucial to my setup, but we won't be using them today: "Events" holds say, meeting at X time, traveling on certain days; "Various Tasks" contains not roundup-related tasks. Then there's the other two: "Roundup" will collect all the tasks we need to work on, and "Supporting funcs" has a couple of org-babel blocks in Python and emacs-lisp.

Anyway, enough talk, let's give it a spin. You'll need a recent version org-mode and a copy of emacs. Make sure that newer org-mode is on your load-path and then evaluate:
    
    
    (require 'org)
    (require 'org-install)
    (require 'ob-python)
    (setq org-confirm-babel-evaluate nil)
    (setq org-src-fontify-natively t)
    (setq org-src-tab-acts-natively t)
    

Next open up the relevant org-mode file. Move to the "Roundup" line, hit Tab to cycle its visibility, and move to the line that starts with "#+call:"

[![](cc_blog_ccommons_screenshot1.png)](cc_blog_ccommons_screenshot1.png)

Now press "Ctrl+c Ctrl+c". You'll see it populate with issues from [my issues list](http://code.creativecommons.org/issues/issue?status=-1,1,2,3,4,5,6,7&@sort=-activity&@search_text=&@dispname=Your%20Issues&@filter=status,assignedto&@group=priority&@columns=id,activity,title,creator,status&assignedto=40&@pagesize=50&@startwith=0):

[![](cc_blog_ccommons_screenshot2.png)](cc_blog_ccommons_screenshot2.png)

What's happening here? So we're executing an org-babel block at point. [Org-babel](http://orgmode.org/worg/org-contrib/babel/intro.php) is an org-mode extension that allows you to make blocks of code executable, and even chain from one language to another (it also has some stuff relevant to Donald Knuth's "literate programming" which is cool but I'm not using here). If we look at the code blocks:

[![](cc_blog_ccommons_screenshot3.png)](cc_blog_ccommons_screenshot3.png)

Anyway, there are three code blocks here.

  * **ccommons-roundup-parse:** uses python to read the [CSV file](http://code.creativecommons.org/issues/issue?@action=export_csv&@columns=id,activity,title,creator,status&@sort=-activity&@group=priority&@filter=status,assignedto&@pagesize=50&@startwith=0&status=-1,1,2,3,4,5,6,7&assignedto=40) generated by roundup which is relevant to my task list, converts it into a list of two-item lists (task id, task title)
  * **ccommons-roundup-insert-func:** the function that actually inserts items into our "* Roundup" heading. It checks the ROUNDUPID property to see if that task is already inserted or not. If not, it inserts the task with the appropriate title and ROUNDUPID.
  * **ccommons-roundup-insert** the actual block we end up invoking. It binds together the data from ccommons-roundup-parse with a function call to the function defined in ccommons-roundup-insert-func.



You can evaluate it multiple times. It'll only insert new tasks that aren't on your list currently. Now you can take notes on your tasks, schedule them for various dates, make subtasks, etc. When you're ready to close out a task close it out both on the ticket and in org-mode. If you want to use a similar setup for org-mode, I think it's easy enough to borrow these methods and just change the CSV URL to whatever URL is appropriate for your user's tasks.

Now admittedly this still isn't even the best setup. It would be good if it told you when some tasks are marked as closed in your org-mode and open in roundup and vice versa. Org-babel still feels a bit hacky... I probably wouldn't use it on anything other than scripts-I-want-to-embed-in-my-orgmode-files (for now at least). I even had to strip out quotes from the titles because org-babel python [doesn't escape quotations from strings correctly](http://article.gmane.org/gmane.emacs.orgmode/33349) currently (but that's a bug, one that will hopefully be fixed). Even so, I've been trying to close out a lot of roundup tasks lately, and it's really helped me to bridge both worlds.

**Edit:** And in case you're wondering why I didn't use url.el instead of piping to python, the reason is because of CSV support... there's none builtin to emacs as far as I know, and splitting on commas doesn't handle all of the escaping intricacies... and org-babel makes it pretty easy to be lazy and simply use python for what python already handles well.

---
pub_date: 2010-11-10
