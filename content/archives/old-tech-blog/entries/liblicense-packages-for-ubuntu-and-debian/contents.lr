title: liblicense packages for Ubuntu and Debian
---
categories:
---
author: asheesh
---
body:

I've finally finished creating and updating the [liblicense](http://wiki.creativecommons.org/Liblicense) packages for Debian and Ubuntu.

For Debian, just make sure your system is set to pull from Debian sid ("unstable") - the packages are in the official archives; take a look at <http://packages.debian.org/liblicense>! (Thanks to Mako for sponsoring my upload.)

For Ubuntu, for the time being, you should use the Creative Commons  
repository. Information on that is at <http://mirrors.creativecommons.org/packages/>. A short summary:

> deb http://mirrors.creativecommons.org/packages hardy main

Add that to sources.list, do "sudo aptitude install liblicense-python", and then you can "import liblicense" to your heart's content!

Because the packages are in the central Debian repository, they will propagate to Ubuntu automatically for Ubuntu's next release, and you won't have to maintain any special configuration to be able to install them.

Nathan Y. asked a question: Why "liblicense2"? This is because of ABI versioning - if you write a C application that links to liblicense and upload that to the Debian archive, it is crucial that if the liblicense library gets updated, the user of your application not need to recompile your app. For that reason, "ABI versioning" is a promise that so long as the library has version _2.x_ , any program built with an earlier or equal version of _2.x_ will have the library functions appear in the same place in memory. That way, the compiled-in assumptions about those functions' location will not be violated. If it were to be violated, the application would quickly crash with a "Segmentation fault" or "Access violation," or it might even try to execute the wrong liblicense function.

Now I need to work on the [Fedora liblicense packaging bug](https://bugzilla.redhat.com/show_bug.cgi?id=446993)....

---
pub_date: 2008-06-16
