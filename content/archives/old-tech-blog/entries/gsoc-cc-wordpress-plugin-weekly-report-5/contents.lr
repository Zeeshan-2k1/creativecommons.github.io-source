title: GSoC CC Wordpress Plugin: Weekly Report #5
---
categories:
API
GSoC
RDFa
WordPress
---
author: erlehmann
---
body:

Another delayed report, late by a day. This time, however, I can _deliver_ ; the current version of the [plugin](/archives/old-tech-blog/entries/gsoc-project-introduction-cc-wordpress-plugin/) sports the filter system I [unsuccessfully tried to implement](/archives/old-tech-blog/entries/gsoc-cc-wordpress-plugin-weekly-report-4/) the week before: While previous versions of the plugin inserted HTML directly into the post ([example screenshot](http://daten.dieweltistgarnichtso.net/pics/screenshots/web/wordpress-cc-plugin/generated-markup-rdfa.png)), the new iteration only inserts a _shortcode_ containing the attachment ID and a caption (e.g. `[[cc:18|some caption]]`). The actual markup is then generated when the page is requested. This satisfies use cases in which a blogger wishes to modify media metadata later on, like changing license or alt text.

Less visible for the user, I was able to unify the two saving functions triggered on saving and inserting media and adding a metadata field which holds the exact license  URI for every attachment (determined using the [Creative Commons API](http://api.creativecommons.org/docs/index.html)). I recommend checking out the [repository](http://code.creativecommons.org/viewgit/wordpress-cc-plugin.git).

For the coming week, I will look into [post thumbnails](http://markjaquith.wordpress.com/2009/12/23/new-in-wordpress-2-9-post-thumbnail-images/), which require no inline markup for purely decorative pictures, like those used at [_Spreeblick_](http://www.spreeblick.com/) and [_Breitband_](http://breitband.dradio.de/). I will also explore alternate content and plugin directories again, as my last attempt regarding that issue was a complete failure.
  *[HTML]: Hypertext Markup Language
  *[ URI]: Uniform Resource Identifier
  *[API]: Application Programming Interface

---
pub_date: 2010-06-30
